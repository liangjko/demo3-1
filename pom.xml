<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>demo3</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>demo3</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<project.build.finalName>demo3s</project.build.finalName>
		<java.version>1.8</java.version>
		<swagger.version>2.8.0</swagger.version>
		<google.guava>23.0</google.guava>
		<fastjson.version>1.2.47</fastjson.version>
		<druid.version>1.2.12</druid.version>
		<poi.version>3.17</poi.version>
		<jwt.version>0.9.0</jwt.version>
		<mybatis.version>1.3.2</mybatis.version>
	</properties>

	<dependencies>
		<!--web-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>

		<!--连接池-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>${druid.version}</version>
		</dependency>

		<!--mysql-->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>

		<!--fastjson-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${fastjson.version}</version>
		</dependency>


		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

<!--		&lt;!&ndash;23/11/2022 10:38	&ndash;&gt;-->
<!--		<dependency>-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-starter-security</artifactId>-->
<!--		</dependency>-->
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>


			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>1.0.0</version>
				<executions>
					<execution>
						<id>build-image</id>     <!--定义一个执行命令的id-->
						<phase>package</phase>   <!--绑定mvn的哪个命令-->
						<goals>
							<goal>build</goal>   <!--要执行的命令 -->
						</goals>
					</execution>
					<execution>
						<id>image-tag</id>
						<phase>package</phase>
						<goals>
							<goal>tag</goal>      <!--tag命令，相当于docker的tag命令-->
						</goals>
						<configuration>
							<image>${project.artifactId}</image>   <!--镜像名-->
							<newName>192.168.170.9:5000/${project.artifactId}:latest</newName>   <!--打的标签名-->
						</configuration>
					</execution>
					<execution>
						<id>package-push</id>
						<phase>package</phase>
						<goals>
							<goal>push</goal>    <!--相当于docker的push命令-->
						</goals>
						<configuration>
							<imageName>私服 ip:私服端口/${project.artifactId}:latest</imageName>  <!--要push的镜像名-->
						</configuration>
					</execution>
				</executions>
				<configuration>
					<imageName>${project.artifactId}:latest</imageName>
					<baseImage>java</baseImage>  <!--基于java构建-->
					<entryPoint>["java","-jar","/${project.build.finalName}.jar"]</entryPoint>
					<dockerHost>http://121.5.145.97:2375</dockerHost>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
					<!--                        <serverId>docker-hub</serverId>     &lt;!&ndash;setting.xml中设置的id&ndash;&gt;-->
					<forceTags>true</forceTags>  <!--重复构建相同镜像则覆盖镜像-->
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>
